Notes to self / Dev journal

~Early Project~

MUD in discord

Accidentally uploaded token- then changed it. amazing how fast discord catches
	that sort of thing.

I'm going to need to think about how to direct bot to specific users - store game data for each character in a database,
then when bot receives a command check the user against the database. maybe have it whisper to each person?


How to store game data in database??
what exactly needs to be stored

player locations
player healths

quest statuses


~~~~~~~~~~~~~~

how will turns work?

how will the database store info from multiple games???

Make the database store a single "game" object
make the game object only reachable by a certain party leader - that
person initiates game, and can load it back up


Creating characters - should be given the option to join or create a party.
when creating a party - make a new party schema, add discord user id 


~~~~~~~~~~~~~~~5/23/23

Where I'm at now - the bot can read and write to database
User is capable of creating a new party on the server, creating characters

TODO now...
 - make it so adding to the party works
 - make it so I can print the party status to the player
 - make it so removing from the party works

questions..
 - Should there be a "party level"? This might cause issue if I don't
 	lock in the party members early on. E.g. players in party level up to 10 or so,
	then they drop out 3 out of 4 members and replace with little babies.
	 - Maybe party level can be based on all party members' levels? so that
	 	game scales appropriately, can switch players in or out (This seems
		like a good idea to me)
 - Need a main questline to start working on
 - should add a perception check in any given area- say an area has 10 perception checks in it,
 	but player only succeeds at 1 or 2 at low level- incentivizes players to return to old
	locations. Maybe when returning to an area where player perception level has increased
	have bot say something like "You sense something has changed about this place... roll perception?"


##Architecture of a Map nodes

 - Map Nodes will indicate places like cities, paths, forests, etc. Some cities should maybe
	even be split into multiple map nodes - west ardoigneou, for example
 - Within a map node, there will be: Buildings, visible characters (e.g. people in a town square).
 	In each building there will be visible characters and invisible characters

	Map Node (City of burgers)
	 |
	 |-Person (Meadow Soprano)
	 |
	 |-Building(Bar)
	 |   |-Person(Dilby)
	 |	 |-Person(Richard)
	 |
	 |-Building(store)
	 	 |-Person(Shopkeep)

###Random thought- what if the more questions you ask in an area, the more unsettled
	people are? like if each Building (maybe change building for Area) had an unsettled
	score that increased the more questions you asked, and made people more cagey until
	you left them alone for a little while or did something to lighten their mood
		- perhaps each person in an area could have a 'unsettled' variable. If it went
			up too high, they would talk to the other people in the area (bot would say
			something like 'dilby and richard are talking...' and their unsettled variables
			would 'compress' slightly (high goes down, due to talking- low goes up)


###RT - Dialogue can feel stale in games, even when a lot of attention is put into making it
	interesting. I imagine this is due to the exponential complexity involved with
	having more than a few characters- for each added character, having multiple
	paths of discussion naturally would result in very high complexity
	 - some games prevent this by having multiple dialogue options that only affect
	 	the next line of dialogue- we can tell, and this feels stale.
		E.g.
		Paimon: Traveler, you suck!
		Traveler: Paimon is an emergency snack OR Paimon shush up you
		Paimon: Don't talk to me that way (outcome the same either way)
	 - Don't know if this would make sense, but perhaps larger deviations from the
	 	branching paths could alleviate this slightly
		Old: -=-
		       __
		New: -=__=-

###RT - Djikstra's shortest path algorithm could be fun to mess with, with respect to
		the map nodes



~~~~~~~~~~~~~~~~~~~~~~~~

Need tpo rethink slightly how to do games/parties. Running into an issue with
adding a player to a party, i want to add a guildId to player, so they cant be 
brought from one server to another. That being said, maybe remove the idea of a
"game" schema and just attach the guild Id to everything, so that people can't 
mix and match between servers. 




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~5/24/23
As noted by my earlier message - games and parties are sort of an issue here.

I've added the bot to a second server, and it's getting very confused between serving
both of them- for example, enabling it on one server enables it for both. I need to
move the logic for enabling the bot into the database, so one server can have it
enabled, while the other doesn't.

Also, something has caused the entry of a null member in a party on the new server.
This breaks shit, so I have to sort that out as well. Stronger architecture would help
this move a little more smoothly- however, I lack the experience necessary to know how
to do that. 
 - This happened a second time while testing, but with many more null entries- 
   will require further looking into.

TODO:
 - lock conversation contexts to a certain user, so other members talking doesn't interrupt
 	it or alter the conversation. Basically, lock the bot to a user while in a conversation.

 - Move bot enabling onto the database level, so that different servers can choose whether
 	or not it is enabled - there should be very strict operational boundaries between 
	servers, for obvious reasons.
	 - 

 - Would be good to find out why a null player was entered.. 
 
 - Should I limit parties to one character per player? maybe not crucial..

 ###RT - because I'm storing the map in the database, I could maybe store multiple copies
 		of the map - this would allow me to change the map under certain circumstances?
		e.g. a ship leaves the harbor, a building burns down, a portal opens
			-wait- just realized this removes the whole point of this being online really,
			because if people are at different stages and are seeing different maps...
			that could MAYBE work?? Unsure..
		-previously i had been thinking of multiple play modes (campaign vs quest or waves)
		- maybe this could be made use of there??
		- worth considering, but not making any promises on it...



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~5/25/23
Found out that adding a player to a party when they are already in the
party results in that error I mentioned previously. Should be fine to fix
that.

Thinking about splitting up files, I'll probably want a different file for
each section of the map you can visit. Maybe have the basic event handling
in the main file, and then extensions to each event handler in separate files.
will have to work it out to see what that'll look like


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~5/29/23
removed parties as a table- now just using session to contain party information. this is
cleaner - prevents multiple queries for information that should be consolidated. Now 
working on turns, soon it will be enemies and map - feel like I'm forgetting something
design-wise... like in a few days I'll think 'shit, i should have done this THAT way..'.
we'll see- hopefully I'm wrong.

I want to have a guy called galley leo who when you talk to him a rest call is sent to 
the nasa astronomy pic of the day and he shows it to the channel and is like look at this
thing i discovered

also- thinking about map nodes
Major location - cities, or at least quadrants of cities. East ardoinge, for example
minor locations- a major location contains multiple of these. East ardoigne might have,
	for example, outskirts, cathedral, palace, slums.
roads should be major locations as well- roads, crossroads, any area that appears on
the map really.
both major and minor locations should have a description, list of characters.
maybe major locations should have a default 'common area' minor location- which the party arrives in first.
it doesn't make sense to copy over all the fields that minor location needs to major locations
when i could just have one more minor location and cover that.
in that case, major locations will only REALLY need a list of minor locations, and
a field for earch cardinal direction - indicating what major location that direction leads to.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~6/1/23
Returning to this after a few days off- need to start considering maps
first things first- make session hold partyLocation, as well as make the
map nodes in the database to store info of what parties are at each node.
I think that storing the data on both sides will make sense here, but I
may need to reconsider- typically in database management this is a no-no,
but i think it is important to be able to access the parties location from
both the party level (bottom up) and map level (top down). Just need to
make sure these stay in sync
 - generating maps - should I do this in the index, or manually in mongo
   

as an aside- still need to figure out why it takes so long for the bot
to say whose turn it is when entering turn mode. probably just some poor
optimization




~~~~~~~~~~~~
just thinking, for the areas, maybe I should have an array of areas
called "accessible from", so that areas can be more complex than just
a single location with one level down. This would allow for things like
dungeons and mazes, or even just more complex cities. maybe "access to"
would be easier to implement here- just some way of chaining together
areas would be good. additionally, an area that has an empty array for
'accessible from' could be the base area- e.g. where you get to when
arriving in that area by default.


thinking about movement among nodes- lets think of a comfortable end
user experience

bot: ...you have arrived at the docks of mitla. to the north is the 
		town center. to the east is the fishing shop. to the west is
		the black market
player: go west
bot: ...you go west. you soon arrive at the black market. to the east 
		there are the docks.
player: (go east, north, north)
bot: ...you arrive at the city gates. to the north is the crossroad
		path. (a new map node)

i want the player to feel free to roam
should add nsew directions to areas.. do i need map nodes??
 - when logging off and back in, would be nice to store where the
 	party was in a rough area
 - good for organization? helps clarify WHERE everything is (e.g.
 	docks belongs to mapNode Mitla)

~~~~~~~~~~~~~~~~~~~~~6/3/23

I think the thing to do now is just ignore map nodes, don't delete
the code or anything but just continue development without them until
I need them again. I'll add NSEW to areas and add a "city" or prefecture
string so I can keep em organized. Beyond that, we SHOULD be okay

~~~~~~~~~~~~~~~~~~~~~~~~~~~6/8/23

Movement works with the new area system- few things i want to do
 - add "region" to each area, so that I can show party location on the map
 - fill out map with areas, then fill with NPCs and dialogue.
 - quests- should i call this something else?? maybe like.. tasks? idk. jobs?
 - quest table with a list of quests on it
 - on each session, have an array of questStatuses? or a new column on each 
 	session for each quest. this might need to be more complex than I'm 
	making it, but it could be something like "quests: [0, 3, 5, 0]
		0 is not started, and then you move through the numbers as you
		progress in each quest maybe
 - still want to move the map building to another file, but I can leave it 
 alone for the time being- long as i remember to comment out the function
 when I don't need to rebuild
 - on the topic of map generation- maybe all relational directions should
 be in the form of amendments, so as not to confuse?

 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~6/9/23

 I was thinking about it, maybe I should come up with a tool of some kind to 
 make the area maps. It's going to be a little funky and redundant to manually
 write in every location you can reach from every other location, this could
 be done a lot easier in like, excel, where I can just use the columns and
 rows to indicate an area. I wonder if I could even make the areas generate
 procedurally this way- that woud be kind of cool actually... so that each
 time I rebooted it looked a little different? This would take a while. I
 should start smaller first- still, a tool to convert CSV into a map would be
 very helpful...

 also- should i have a blurb of text for each area that appears the first time 
 the party arrives in an area, to introduce them? Maybe... maybe this should
 be more of an "initiate quest" thing.. e.g. first time they arrive at the
 docks, new quest starts and the bot is like "some guy walks up to you and
 gives you a quest" but more interesting blurb

 Also, want to figure out how to talk to groups of people at once, rather
 than only being able to talk to one person at a time.


~~~~~~~
need to make sure talking sends to all sessions in area
Also- how to talk to NPC vs general chat???
e.g. there is an npc nearby named Bill McEpic
person says "talk to bill" or "speak with bill" or "talk bill McEpic"
	- talk to bill
person says "say hello"
I guess I can split first by say VS talk / speak


for all npcs, have a list of recognized names



`~~~~~~~~~~~~~~~~~~~~~~6/30/23
woopsie haven't been here for a bit
I think I need to come up with a timeline so this gets done. I had talked to
noah about this a little bit ago- but haven't seriously worked on one until now.
How about this-

Functional DEMO by the end of next month.
July starts tomorrow, so let's split it into 4 weeks, with a few extra days
at the end for buffer

1. - due July 7
First thing I should probably do is finish the map- both design and generation
that can be week 1

2. - due July 14
Then, populate with NPCs. A week may be a little long for this, but I want to
not rush myself on this part and give people real depth, e.g. simple story
complex characters

3. - due July 25
then I can do a single quest or storyline, as well as finish programming how 
exactly dialogue works. This may take about a week and a half, leaving a few 
days before buffer period.

4. - Due end of the month (July 31)
I can dedicate the last week for buffer. unforseen issues and significant
programmatic changes will take this time. If I have extra time at the end here, 
work on linking parties who are in the same area so I can talk across servers.




Revisiting this for a thought- also did NOT make functional demo deadline LOL woopsie
what if I extended the map builder util into a whole world builder? e.g. char builder
and then quest builder (make segments of a quest- fetch quest, fight dudes, fight boss,
etc).

Revisiting this again - concept of building the world around Medieval Mecha, tree ents and rock golems controlled by wizards
Todo next for map tool - decide WHAT variables an NPC needs to hold
name,
description,
class/race?
queeests?? depending on how i do that (i can add this later honestly)
hp (current and max)
job?
level?
wanderLimit?
schedule?? this could be cool down the line- implement a shortest path algorithm for NPCs to get to various
	parts of the map given a schedule of location IDs. probably hold off for now


i think I should make a quest tool, but it should be separate- a tool where you can pick an NPC and have them as the start point
for a quest, then add as many items for the quest as you want ('nodes' of different types- fetch, speak with, kill, etc)
